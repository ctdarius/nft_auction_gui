{
  "address": "0x20528F29f58B2f311E7f1be5D44EB941f6d4Fb03",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionEndPeriod",
          "type": "uint256"
        }
      ],
      "name": "AuctionPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "auctionSettler",
          "type": "address"
        }
      ],
      "name": "AuctionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "BidMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        }
      ],
      "name": "BidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "HighestBidTaken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinPrice",
          "type": "uint256"
        }
      ],
      "name": "MinimumPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftHighestBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftHighestBidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftRecipient",
          "type": "address"
        }
      ],
      "name": "NFTTransferredAndSellerPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        }
      ],
      "name": "NFTWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionBidPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "bidIncreasePercentage",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8[]",
          "name": "feePercentages",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "NftAuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "masterTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "batchTokens",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionBidPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "bidIncreasePercentage",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8[]",
          "name": "feePercentages",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "NftBatchAuctionCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_batchTokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionBidPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_bidIncreasePercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint8[]",
          "name": "_feePercentages",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "createBatchNftAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionBidPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_bidIncreasePercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint8[]",
          "name": "_feePercentages",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "createNewNftAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "failedTransferCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "makeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_nftRecipient",
          "type": "address"
        }
      ],
      "name": "makeCustomBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumSettableIncreasePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftContractAuctions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionBidPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftHighestBid",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "bidIncreasePercentage",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "nftHighestBidder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOfNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "takeHighestBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newMinPrice",
          "type": "uint256"
        }
      ],
      "name": "updateMinimumPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAllFailedCredits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7d969ed0c0f464217321cd72948d2a68370f803edfb983dccf3437b7507b6254",
  "receipt": {
    "to": null,
    "from": "0x00B91B2F8aFE87FCDc2b3fFA9ee2278cd1E4DDf8",
    "contractAddress": "0x20528F29f58B2f311E7f1be5D44EB941f6d4Fb03",
    "transactionIndex": 0,
    "gasUsed": "2248752",
    "logsBloom": "0x
    "blockHash": "0x73ba317690476738f648e5f9e070faa2e31e3e235a4d93fd7236272f0ae764ae",
    "transactionHash": "0x7d969ed0c0f464217321cd72948d2a68370f803edfb983dccf3437b7507b6254",
    "logs": [],
    "blockNumber": 9851903,
    "cumulativeGasUsed": "2248752",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "9a11d47b8975aec182736d8203c5c32e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndPeriod\",\"type\":\"uint256\"}],\"name\":\"AuctionPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionSettler\",\"type\":\"address\"}],\"name\":\"AuctionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"BidMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"}],\"name\":\"BidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"HighestBidTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinPrice\",\"type\":\"uint256\"}],\"name\":\"MinimumPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftHighestBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftHighestBidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftRecipient\",\"type\":\"address\"}],\"name\":\"NFTTransferredAndSellerPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"}],\"name\":\"NFTWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionBidPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"bidIncreasePercentage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"feePercentages\",\"type\":\"uint8[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"}],\"name\":\"NftAuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"masterTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"batchTokens\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionBidPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"bidIncreasePercentage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"feePercentages\",\"type\":\"uint8[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"}],\"name\":\"NftBatchAuctionCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_batchTokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionBidPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_bidIncreasePercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8[]\",\"name\":\"_feePercentages\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"}],\"name\":\"createBatchNftAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionBidPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_bidIncreasePercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8[]\",\"name\":\"_feePercentages\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"}],\"name\":\"createNewNftAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"failedTransferCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"makeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftRecipient\",\"type\":\"address\"}],\"name\":\"makeCustomBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumSettableIncreasePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftContractAuctions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionBidPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftHighestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"bidIncreasePercentage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"nftHighestBidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftRecipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOfNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeHighestBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMinPrice\",\"type\":\"uint256\"}],\"name\":\"updateMinimumPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllFailedCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Bekhnam\",\"kind\":\"dev\",\"methods\":{\"makeCustomBid(address,uint256,address)\":{\"params\":{\"_nftContractAddress\":\"The address of NFT collectible\",\"_nftRecipient\":\"A recipient when the auction is finished\",\"_tokenId\":\"Token id of NFT item in collectible\"}},\"ownerOfNFT(address,uint256)\":{\"params\":{\"_nftContractAddress\":\"The address of NFT collectible\",\"_tokenId\":\"Token id of NFT item in collectible\"}},\"settleAuction(address,uint256)\":{\"params\":{\"_nftContractAddress\":\"The address of NFT collectible\",\"_tokenId\":\"Token id of NFT item in collectible\"}},\"takeHighestBid(address,uint256)\":{\"params\":{\"_nftContractAddress\":\"The address of NFT collectible\",\"_tokenId\":\"Token id of NFT item in collectible\"}},\"updateMinimumPrice(address,uint256,uint256)\":{\"params\":{\"_newMinPrice\":\"New min price\",\"_nftContractAddress\":\"The address of NFT collectible\",\"_tokenId\":\"Token id of NFT item in collectible\"}},\"withdrawNft(address,uint256)\":{\"params\":{\"_nftContractAddress\":\"The address of NFT collectible\",\"_tokenId\":\"Token id of NFT item in collectible\"}}},\"title\":\"An Auction Contract for bidding and selling single and batched NFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"makeCustomBid(address,uint256,address)\":{\"notice\":\"Make a custom bid on ongoing auction that lets bidder set up a NFT recipient as the auction is finished\"},\"minimumSettableIncreasePercentage()\":{\"notice\":\"Default values that are used if not specified by the NFT seller\"},\"nftContractAuctions(address,uint256)\":{\"notice\":\"Mapping all nft items' auction\"},\"ownerOfNFT(address,uint256)\":{\"notice\":\"Read owner of a NFT item\"},\"settleAuction(address,uint256)\":{\"notice\":\"Settle auction when it is finished\"},\"takeHighestBid(address,uint256)\":{\"notice\":\"Owner of NFT can take the highest bid and end the auction\"},\"updateMinimumPrice(address,uint256,uint256)\":{\"notice\":\"Update minimum price\"},\"withdrawAllFailedCredits()\":{\"notice\":\"Withdraw failed credits of bidder\"},\"withdrawNft(address,uint256)\":{\"notice\":\"Cancel auction and withdraw NFT before a bid is made\"}},\"notice\":\"This contract can be used for auctioning any NFTs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boarc/NFTAuction.sol\":\"NFTAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boarc/NFTAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\nimport \\\"../token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title An Auction Contract for bidding and selling single and batched NFTs\\n * @author Bekhnam\\n * @notice This contract can be used for auctioning any NFTs\\n */\\ncontract NFTAuction {\\n    /// Main auction variables\\n    struct Auction {\\n        uint256 minPrice;\\n        uint256 auctionBidPeriod;\\n        uint256 auctionEnd;\\n        uint256 nftHighestBid;\\n        uint256[] batchTokenIds;\\n        uint8[] feePercentages;\\n        uint8 bidIncreasePercentage;\\n        address nftHighestBidder;\\n        address nftSeller;\\n        address nftRecipient;\\n        address[] feeRecipients;\\n    }\\n\\n    /// Mapping all nft items' auction\\n    mapping(address => mapping(uint256 => Auction)) public nftContractAuctions;\\n    mapping(address => mapping(uint256 => address)) public nftOwner;\\n    mapping(address => uint256) public failedTransferCredits;\\n\\n    /**\\n     * Default values that are used if not specified by the NFT seller\\n     */\\n    uint256 public minimumSettableIncreasePercentage;\\n\\n    /***************************\\n     *         Events\\n     ***************************/\\n    \\n    event NftAuctionCreated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address nftSeller,\\n        uint256 minPrice,\\n        uint256 auctionBidPeriod,\\n        uint8 bidIncreasePercentage,\\n        uint8[] feePercentages,\\n        address[] feeRecipients\\n    );\\n\\n    event NftBatchAuctionCreated(\\n        address nftContractAddress,\\n        uint256 masterTokenId,\\n        uint256[] batchTokens,\\n        address nftSeller,\\n        uint256 minPrice,\\n        uint256 auctionBidPeriod,\\n        uint8 bidIncreasePercentage,\\n        uint8[] feePercentages,\\n        address[] feeRecipients\\n    );\\n\\n    event BidMade(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address bidder,\\n        uint256 ethAmount\\n    );\\n\\n    event AuctionPeriodUpdated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        uint256 auctionEndPeriod\\n    );\\n\\n    event NFTTransferredAndSellerPaid(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        uint256 nftHighestBid,\\n        address nftHighestBidder,\\n        address nftSeller,\\n        address nftRecipient\\n    );\\n\\n    event AuctionSettled(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address auctionSettler\\n    );\\n\\n    event NFTWithdrawn(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address nftSeller\\n    );\\n\\n    event BidWithdrawn(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address highestBidder\\n    );\\n\\n    event MinimumPriceUpdated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        uint256 newMinPrice\\n    );\\n\\n    event HighestBidTaken(\\n        address nftContractAddress,\\n        uint256 tokenId\\n    );\\n\\n    /****************************\\n     *        Modifiers\\n     ****************************/\\n\\n    modifier auctionOngoing(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            _isAuctionOngoing(_nftContractAddress, _tokenId),\\n            \\\"Auction has ended\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier priceGreaterThanZero(uint256 _price) {\\n        require(_price > 0, \\\"Price cannot be 0\\\");\\n        _;\\n    }\\n\\n    modifier notNftSeller(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            msg.sender != nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n            \\\"Owner cannot bid on own NFT\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyNftSeller(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            msg.sender == nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n            \\\"Only nft seller\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isNFTExists(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            IERC721(_nftContractAddress).ownerOf(_tokenId) == msg.sender,\\n            \\\"NFT does not exist\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier bidAmountMeetsBidRequirements(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) {\\n        require(\\n            _doesBidMeetBidRequirements(\\n                _nftContractAddress,\\n                _tokenId\\n            ),\\n            \\\"Not enough funds to bid on NFT\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier minimumBidNotMade(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            !_isMinimumBidMade(_nftContractAddress, _tokenId),\\n            \\\"The auction has a valid bid made\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier batchWithinLimits(uint256 _batchTokenIdsLength) {\\n        require(\\n            _batchTokenIdsLength > 1 && _batchTokenIdsLength <= 100,\\n            \\\"Number of NFTs not applicable for batch sale/auction\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isAuctionOver(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            !_isAuctionOngoing(_nftContractAddress, _tokenId),\\n            \\\"Auction is not yet over\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier notZeroAddress(address _address) {\\n        require(_address != address(0), \\\"Cannot specify 0 address\\\");\\n        _;\\n    }\\n\\n    modifier increasePercentageAboveMinimum(uint8 _bidIncreasePercentage) {\\n        require(\\n            _bidIncreasePercentage >= minimumSettableIncreasePercentage,\\n            \\\"Bid increase percentage too low\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isFeePercentagesLessThanMaximum(uint8[] memory _feePercentages) {\\n        uint8 totalPercent;\\n        for (uint256 i = 0; i < _feePercentages.length; i++) {\\n            totalPercent = totalPercent + _feePercentages[i];\\n        }\\n        require(totalPercent <= 100, \\\"Fee percentage exceed maximum\\\");\\n        _;\\n    }\\n\\n    modifier correctFeeRecipientsAndPercentages(\\n        uint256 _recipientsLength,\\n        uint256 _percentagesLength\\n    ) {\\n        require(\\n            _recipientsLength == _percentagesLength,\\n            \\\"Mismatched fee recipients and percentages\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor() {\\n        minimumSettableIncreasePercentage = 1;\\n    }\\n\\n    /**********************************\\n     *        Check functions\\n     **********************************/\\n\\n    /**\\n     * @notice Check the status of an auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @return True if the auction is still going on and vice versa \\n     */\\n    function _isAuctionOngoing(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        uint256 auctionEndTimestamp = nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd;\\n        // solhint-disable not-rely-on-time\\n        return (auctionEndTimestamp == 0 || block.timestamp < auctionEndTimestamp);\\n    }\\n\\n    /**\\n     * @notice Check if a bid has been made. This is applicable in the early bid scenario\\n     * to ensure that if an auction is created after an early bid, the auction\\n     * begins appropriately or is settled if the buy now price is met.\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @return True if there is a bid\\n     */\\n    function _isABidMade(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view \\n        returns (bool)\\n    {\\n        return (nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid > 0);\\n    }\\n\\n    /**\\n     * @notice if the minPrice is set by the seller, check that the highest bid meets or exceeds that price.\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _isMinimumBidMade(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        uint256 minPrice = nftContractAuctions[_nftContractAddress][_tokenId].minPrice;\\n        return minPrice > 0 &&\\n            (nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid >= minPrice);\\n    }\\n\\n    /**\\n     * @notice Check that a bid is applicable for the purchase of the NFT. The bid needs to be a % higher than the previous bid.\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _doesBidMeetBidRequirements(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal view returns (bool) {\\n        uint256 nextBidAmount = (nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid * \\n            (100 + nftContractAuctions[_nftContractAddress][_tokenId].bidIncreasePercentage)) / 100;\\n        return (msg.value >= nextBidAmount);\\n    }\\n\\n    /**\\n     * @param _totalBid the total bid\\n     * @param _percentage percent of each bid\\n     * @return the percentage of the total bid (used to calculate fee payments)\\n     */\\n    function _getPortionOfBid(uint256 _totalBid, uint8 _percentage)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        return (_totalBid * _percentage) / 100;\\n    }\\n\\n    /**\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @return Nft recipient when auction is finished\\n     */\\n    function _getNftRecipient(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (address)\\n    {\\n        address nftRecipient = nftContractAuctions[_nftContractAddress][_tokenId].nftRecipient;\\n\\n        if (nftRecipient == address(0)) {\\n            return nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBidder;\\n        } else {\\n            return nftRecipient;\\n        }\\n    }\\n\\n    /*************************************\\n     *      Transfer NFTs to Contract\\n     *************************************/\\n\\n    /**\\n     * @notice Transfer an NFT to auction's contract\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _transferNftToAuctionContract(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        require(IERC721(_nftContractAddress).ownerOf(_tokenId) == msg.sender, \\\"Only owner can call this\\\");\\n        IERC721(_nftContractAddress).transferFrom(msg.sender, address(this), _tokenId);\\n        nftOwner[_nftContractAddress][_tokenId] = msg.sender;\\n    }\\n\\n    /**\\n     * @notice Transfer batch of NFTs to auction's contract\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _batchTokenIds Token id of NFT item in collectible\\n     */\\n    function _transferNftBatchToAuctionContract(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds\\n    ) internal {\\n        for (uint256 i = 0; i < _batchTokenIds.length; i++) {\\n            require(IERC721(_nftContractAddress).ownerOf(_batchTokenIds[i]) == msg.sender, \\\"Only owner can call this\\\");\\n            IERC721(_nftContractAddress).transferFrom(msg.sender, address(this), _batchTokenIds[i]);\\n            nftOwner[_nftContractAddress][_batchTokenIds[i]] = msg.sender;\\n        }\\n    }\\n\\n    /****************************\\n     *     Auction creation\\n     ****************************/\\n\\n    /**\\n     * @notice Set up primary parameters of an auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @param _minPrice Minimum price\\n     * @param _auctionBidPeriod Auction bid period\\n     * @param _bidIncreasePercentage Increased percentage of each bid\\n     * @param _feePercentages List of fees paid for given recipients\\n     * @param _feeRecipients List of recipients who recieve fees of successful auction\\n     */\\n    function _setupAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _minPrice,\\n        uint256 _auctionBidPeriod,\\n        uint8 _bidIncreasePercentage,\\n        uint8[] memory _feePercentages,\\n        address[] memory _feeRecipients\\n    )\\n        internal\\n        correctFeeRecipientsAndPercentages(_feeRecipients.length, _feePercentages.length)\\n        isFeePercentagesLessThanMaximum(_feePercentages)\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId].minPrice = _minPrice;\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionBidPeriod = _auctionBidPeriod;\\n        nftContractAuctions[_nftContractAddress][_tokenId].bidIncreasePercentage = _bidIncreasePercentage;\\n        nftContractAuctions[_nftContractAddress][_tokenId].feeRecipients = _feeRecipients;\\n        nftContractAuctions[_nftContractAddress][_tokenId].feePercentages = _feePercentages;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftSeller = msg.sender;\\n    }\\n\\n    /**\\n     * @notice Create an auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @param _minPrice Minimum price\\n     * @param _auctionBidPeriod Auction bid period\\n     * @param _bidIncreasePercentage Increased percentage of each bid\\n     * @param _feePercentages List of fees paid for given recipients\\n     * @param _feeRecipients List of recipients who recieve fees of successful auction\\n     */\\n    function _createNewNftAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _minPrice,\\n        uint256 _auctionBidPeriod,\\n        uint8 _bidIncreasePercentage,\\n        uint8[] memory _feePercentages,\\n        address[] memory _feeRecipients\\n    ) internal {\\n        _transferNftToAuctionContract(_nftContractAddress, _tokenId);\\n        _setupAuction(\\n            _nftContractAddress,\\n            _tokenId,\\n            _minPrice,\\n            _auctionBidPeriod,\\n            _bidIncreasePercentage,\\n            _feePercentages,\\n            _feeRecipients\\n        );\\n        emit NftAuctionCreated(\\n            _nftContractAddress,\\n            _tokenId,\\n            msg.sender,\\n            _minPrice,\\n            _auctionBidPeriod,\\n            _bidIncreasePercentage,\\n            _feePercentages,\\n            _feeRecipients\\n        );\\n        _updateOngoingAuction(_nftContractAddress, _tokenId);\\n    }\\n\\n    function createNewNftAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _minPrice,\\n        uint256 _auctionBidPeriod,\\n        uint8 _bidIncreasePercentage,\\n        uint8[] memory _feePercentages,\\n        address[] memory _feeRecipients\\n    )\\n        external\\n        priceGreaterThanZero(_minPrice)\\n        increasePercentageAboveMinimum(_bidIncreasePercentage)\\n    {\\n        _createNewNftAuction(\\n            _nftContractAddress,\\n            _tokenId,\\n            _minPrice,\\n            _auctionBidPeriod,\\n            _bidIncreasePercentage,\\n            _feePercentages,\\n            _feeRecipients\\n        );\\n    }\\n\\n    /**\\n     * @notice Create an batch of NFTs auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _batchTokenIds Batch of token id of NFT items in collectible\\n     * @param _minPrice Minimum price\\n     * @param _auctionBidPeriod Auction bid period\\n     * @param _bidIncreasePercentage Increased percentage of each bid\\n     * @param _feePercentages List of fees paid for given recipients\\n     * @param _feeRecipients List of recipients who recieve fees of successful auction\\n     */\\n    function _createBatchNftAuction(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds,\\n        uint256 _minPrice,\\n        uint256 _auctionBidPeriod,\\n        uint8 _bidIncreasePercentage,\\n        uint8[] memory _feePercentages,\\n        address[] memory _feeRecipients\\n    ) internal {\\n        _transferNftBatchToAuctionContract(_nftContractAddress, _batchTokenIds);\\n        _setupAuction(\\n            _nftContractAddress,\\n            _batchTokenIds[0],\\n            _minPrice,\\n            _auctionBidPeriod,\\n            _bidIncreasePercentage,\\n            _feePercentages,\\n            _feeRecipients\\n        );\\n        emit NftBatchAuctionCreated(\\n            _nftContractAddress,\\n            _batchTokenIds[0],\\n            _batchTokenIds,\\n            msg.sender,\\n            _minPrice,\\n            _auctionBidPeriod,\\n            _bidIncreasePercentage,\\n            _feePercentages,\\n            _feeRecipients\\n        );\\n        _updateOngoingAuction(_nftContractAddress, _batchTokenIds[0]);\\n    }\\n\\n    function createBatchNftAuction(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds,\\n        uint256 _minPrice,\\n        uint256 _auctionBidPeriod,\\n        uint8 _bidIncreasePercentage,\\n        uint8[] memory _feePercentages,\\n        address[] memory _feeRecipients\\n    )\\n        external\\n        priceGreaterThanZero(_minPrice)\\n        batchWithinLimits(_batchTokenIds.length)\\n        increasePercentageAboveMinimum(_bidIncreasePercentage)\\n    {\\n        _createBatchNftAuction(\\n            _nftContractAddress,\\n            _batchTokenIds,\\n            _minPrice,\\n            _auctionBidPeriod,\\n            _bidIncreasePercentage,\\n            _feePercentages,\\n            _feeRecipients\\n        );\\n    }\\n\\n    /*******************************\\n     *       Bid Functions\\n     *******************************/\\n    \\n    /**\\n     * @notice Make bid on ongoing auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _makeBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    )\\n        internal\\n        notNftSeller(_nftContractAddress, _tokenId)\\n        bidAmountMeetsBidRequirements(_nftContractAddress, _tokenId)\\n    {\\n        _reversePreviousBidAndUpdateHighestBid(_nftContractAddress, _tokenId);\\n        emit BidMade(_nftContractAddress, _tokenId, msg.sender, msg.value);\\n        _updateOngoingAuction(_nftContractAddress, _tokenId);\\n    }\\n\\n    function makeBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    )\\n        external\\n        payable\\n        auctionOngoing(_nftContractAddress, _tokenId)\\n    {\\n        _makeBid(_nftContractAddress, _tokenId);\\n    }\\n\\n    /**\\n     * @notice Make a custom bid on ongoing auction that lets bidder set up a NFT recipient as the auction is finished\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @param _nftRecipient A recipient when the auction is finished\\n     */\\n    function makeCustomBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _nftRecipient\\n    )\\n        external\\n        payable\\n        auctionOngoing(_nftContractAddress, _tokenId)\\n        notZeroAddress(_nftRecipient)\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftRecipient = _nftRecipient;\\n        _makeBid(_nftContractAddress, _tokenId);\\n    }\\n\\n    /********************************\\n     *       Update Auction\\n     ********************************/\\n    \\n    /**\\n     * @notice Update an ongoing auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _updateOngoingAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        // min price not set, nft not up for auction yet\\n        if (_isMinimumBidMade(_nftContractAddress, _tokenId)) {\\n            _updateAuctionEnd(_nftContractAddress, _tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @notice Update an auction end time\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _updateAuctionEnd(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        uint256 auctionBidPeriod = nftContractAuctions[_nftContractAddress][_tokenId].auctionBidPeriod;\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd = auctionBidPeriod + block.timestamp;\\n        emit AuctionPeriodUpdated(_nftContractAddress, _tokenId, nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd);\\n    }\\n\\n    /********************************\\n     *        Reset Functions\\n     ********************************/\\n    \\n    /**\\n     * @notice Reset an auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _resetAuction(address _nftContractAddress, uint256 _tokenId) internal {\\n        nftContractAuctions[_nftContractAddress][_tokenId].minPrice = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionBidPeriod = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].bidIncreasePercentage = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftSeller = address(0);\\n    }\\n\\n    /**\\n     * @notice Reset a bid\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _resetBids(address _nftContractAddress, uint256 _tokenId) internal {\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBidder = address(0);\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftRecipient = address(0);\\n    }\\n\\n    /********************************\\n     *         Update Bids\\n     ********************************/\\n    \\n    /**\\n     * @notice Update highest bid\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _updateHighestBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid = msg.value;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBidder = msg.sender;\\n    }\\n\\n    /**\\n     * @notice Set up new highest bid and reverse previous onw\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _reverseAndResetPreviousBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        address nftHighestBidder = nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBidder;\\n        uint256 nftHighestBid = nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid;\\n        _resetBids(_nftContractAddress, _tokenId);\\n        _payout(nftHighestBidder, nftHighestBid);\\n    }\\n\\n    /**\\n     * @notice Set up new highest bid and reverse previous onw\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _reversePreviousBidAndUpdateHighestBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        address prevNftHighestBidder = nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBidder;\\n        uint256 prevNftHighestBid = nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid;\\n        _updateHighestBid(_nftContractAddress, _tokenId);\\n\\n        if (prevNftHighestBidder != address(0)) {\\n            _payout(prevNftHighestBidder, prevNftHighestBid);\\n        }\\n    }\\n\\n    /************************************\\n     *   Transfer NFT and Pay Seller\\n     ************************************/\\n    \\n    /**\\n     * @notice Set up new highest bid and reverse previous one\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function _transferNftAndPaySeller(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        address _nftSeller = nftContractAuctions[_nftContractAddress][_tokenId].nftSeller;\\n        address _nftHighestBidder = nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBidder;\\n        address _nftRecipient = _getNftRecipient(_nftContractAddress, _tokenId);\\n        uint256 _nftHighestBid = nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid;\\n        _resetBids(_nftContractAddress, _tokenId);\\n        _payFeesAndSeller(_nftContractAddress, _tokenId, _nftSeller, _nftHighestBid);\\n        //reset bid and transfer nft last to avoid reentrancy\\n        uint256[] memory batchTokenIds = nftContractAuctions[_nftContractAddress][_tokenId].batchTokenIds;\\n        uint256 numberOfTokens = batchTokenIds.length;\\n        if (numberOfTokens > 0) {\\n            for (uint256 i = 0; i < numberOfTokens; i++) {\\n                IERC721(_nftContractAddress).transferFrom(\\n                    address(this),\\n                    _nftRecipient,\\n                    batchTokenIds[i]\\n                );\\n                nftOwner[_nftContractAddress][batchTokenIds[i]] = address(0);\\n            }\\n        } else {\\n            IERC721(_nftContractAddress).transferFrom(\\n                address(this),\\n                _nftRecipient,\\n                _tokenId\\n            );\\n        }\\n        _resetAuction(_nftContractAddress, _tokenId);\\n        emit NFTTransferredAndSellerPaid(\\n            _nftContractAddress,\\n            _tokenId,\\n            _nftHighestBid,\\n            _nftHighestBidder,\\n            _nftSeller,\\n            _nftRecipient\\n        );\\n    }\\n\\n    /**\\n     * @notice Pay fees and seller\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @param _nftSeller Address of NFT's seller\\n     * @param _highestBid The highest bid \\n     */\\n    function _payFeesAndSeller(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _nftSeller,\\n        uint256 _highestBid\\n    ) internal {\\n        uint256 feesPaid;\\n        for (uint256 i = 0; i < nftContractAuctions[_nftContractAddress][_tokenId].feeRecipients.length; i++) {\\n            uint256 fee = _getPortionOfBid(_highestBid, nftContractAuctions[_nftContractAddress][_tokenId].feePercentages[i]);\\n            feesPaid = feesPaid + fee;\\n            _payout(nftContractAuctions[_nftContractAddress][_tokenId].feeRecipients[i], fee);\\n        }\\n        _payout(_nftSeller, (_highestBid - feesPaid));\\n    }\\n\\n    function _payout(\\n        address _recipient,\\n        uint256 _amount\\n    ) internal {\\n        // solhint-disable avoid-low-level-calls\\n        (bool success, ) = payable(_recipient).call{value: _amount}(\\\"\\\");\\n        if (!success) {\\n            failedTransferCredits[_recipient] = failedTransferCredits[_recipient] + _amount;\\n        }\\n    }\\n\\n    /*********************************\\n     *      Settle and Withdraw\\n     *********************************/\\n    \\n    /**\\n     * @notice Settle auction when it is finished\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function settleAuction(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        isAuctionOver(_nftContractAddress, _tokenId)\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n    {\\n        _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n        emit AuctionSettled(_nftContractAddress, _tokenId, msg.sender);\\n    }\\n\\n    /**\\n     * @notice Cancel auction and withdraw NFT before a bid is made\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function withdrawNft(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        minimumBidNotMade(_nftContractAddress, _tokenId)\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n    {\\n        uint256[] memory batchTokenIds = nftContractAuctions[_nftContractAddress][_tokenId].batchTokenIds;\\n        uint256 numberOfTokens = batchTokenIds.length;\\n        if (numberOfTokens > 0) {\\n            for (uint256 i = 0; i < numberOfTokens; i++) {\\n                IERC721(_nftContractAddress).transferFrom(\\n                    address(this),\\n                    nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n                    batchTokenIds[i]\\n                );\\n                nftOwner[_nftContractAddress][batchTokenIds[i]] = address(0);\\n            }\\n        } else {\\n            IERC721(_nftContractAddress).transferFrom(\\n                address(this),\\n                nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n                _tokenId\\n            );\\n        }\\n        _resetAuction(_nftContractAddress, _tokenId);\\n        emit NFTWithdrawn(_nftContractAddress, _tokenId, msg.sender);\\n    }\\n\\n    /**********************************\\n     *        Update Auction\\n     **********************************/\\n    \\n    /**\\n     * @notice Update minimum price\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     * @param _newMinPrice New min price\\n     */\\n    function updateMinimumPrice(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _newMinPrice\\n    )\\n        external\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n        minimumBidNotMade(_nftContractAddress, _tokenId)\\n        priceGreaterThanZero(_newMinPrice)\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId].minPrice = _newMinPrice;\\n        emit MinimumPriceUpdated(_nftContractAddress, _tokenId, _newMinPrice);\\n\\n        if (_isMinimumBidMade(_nftContractAddress, _tokenId)) {\\n            _updateAuctionEnd(_nftContractAddress, _tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @notice Owner of NFT can take the highest bid and end the auction\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function takeHighestBid(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n    {\\n        require(\\n            _isABidMade(_nftContractAddress, _tokenId),\\n            \\\"Cannot payout 0 bid\\\"\\n        );\\n        _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n        emit HighestBidTaken(_nftContractAddress, _tokenId);\\n    }\\n\\n    /****************************************\\n     *         Other useful functions\\n     ****************************************/\\n    \\n    /**\\n     * @notice Read owner of a NFT item\\n     * @param _nftContractAddress The address of NFT collectible\\n     * @param _tokenId Token id of NFT item in collectible\\n     */\\n    function ownerOfNFT(address _nftContractAddress, uint256 _tokenId)\\n        external \\n        view\\n        returns (address)\\n    {\\n        address nftSeller = nftContractAuctions[_nftContractAddress][_tokenId].nftSeller;\\n        require(nftSeller != address(0), \\\"NFT not deposited\\\");\\n\\n        return nftSeller;\\n    }\\n\\n    /**\\n     * @notice Withdraw failed credits of bidder\\n     */\\n    function withdrawAllFailedCredits() external {\\n        uint256 amount = failedTransferCredits[msg.sender];\\n\\n        require(amount != 0, \\\"no credits to withdraw\\\");\\n        failedTransferCredits[msg.sender] = 0;\\n\\n        (bool successfulWithdraw, ) = msg.sender.call{\\n            value: amount,\\n            gas: 20000\\n        }(\\\"\\\");\\n        require(successfulWithdraw, \\\"withdraw failed\\\");\\n    }\\n}\",\"keccak256\":\"0x0b4944fc0a836f7b3172f8814ce4cdd6991bae8f6fc5e3e881c1994580a27e62\",\"license\":\"MIT\"},\"contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x97bf216e58df37955672af4b98f00667a87f3a92905879e22d8cd995c6b444b7\",\"license\":\"MIT\"},\"contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n    \\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n    function setApprovalForAll(address operator, bool _approved) external;\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\",\"keccak256\":\"0x545d88e53b428ba5a12a286fb12cee1b670d5de9fb734015ba23a858e0ad4872\",\"license\":\"MIT\"},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\",\"keccak256\":\"0x6966b756b6d90da4d2014ef4298db04cb6807b7b413166b176ac09c4276577ed\",\"license\":\"MIT\"},\"contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600355612752806100256000396000f3fe6080604052600436106100dd5760003560e01c80635a5822601161007f578063b6ad691411610059578063b6ad691414610243578063bc24555a14610258578063d8fc65191461026b578063e1d544c91461028b576100dd565b80635a582260146101e3578063848e5c7714610203578063b603c7d014610223576100dd565b806317935d1f116100bb57806317935d1f1461015457806320950fc6146101745780633d87d5fb146101a15780635138b08c146101c3576100dd565b8063041fa0b8146100e2578063128a48dd1461011f57806314b2bfe814610134575b600080fd5b3480156100ee57600080fd5b506101026100fd366004611e30565b6102ab565b604051610116989796959493929190612594565b60405180910390f35b61013261012d366004611e5b565b610308565b005b34801561014057600080fd5b5061013261014f366004611d1b565b6103ac565b34801561016057600080fd5b5061013261016f366004611ed0565b61043d565b34801561018057600080fd5b5061019461018f366004611e30565b61049e565b6040516101169190611fee565b3480156101ad57600080fd5b506101b66104ed565b604051610116919061258b565b3480156101cf57600080fd5b506101326101de366004611e30565b6104f3565b3480156101ef57600080fd5b506101b66101fe366004611ce3565b6105b2565b34801561020f57600080fd5b5061013261021e366004611e30565b6105c4565b34801561022f57600080fd5b5061019461023e366004611e30565b61067c565b34801561024f57600080fd5b506101326106a2565b610132610266366004611e30565b61075d565b34801561027757600080fd5b50610132610286366004611e30565b610795565b34801561029757600080fd5b506101326102a6366004611e9c565b610aa7565b60006020818152928152604080822090935290815220805460018201546002830154600384015460068501546007860154600890960154949593949293919260ff8216926001600160a01b03610100909304831692908116911688565b82826103148282610bbd565b6103395760405162461bcd60e51b8152600401610330906123aa565b60405180910390fd5b826001600160a01b0381166103605760405162461bcd60e51b81526004016103309061252b565b6001600160a01b03868116600090815260208181526040808320898452909152902060080180546001600160a01b0319169186169190911790556103a48686610bf6565b505050505050565b84600081116103cd5760405162461bcd60e51b8152600401610330906122bd565b86516001811180156103e0575060648111155b6103fc5760405162461bcd60e51b815260040161033090612405565b846003548160ff1610156104225760405162461bcd60e51b815260040161033090612251565b6104318a8a8a8a8a8a8a610cb9565b50505050505050505050565b846000811161045e5760405162461bcd60e51b8152600401610330906122bd565b836003548160ff1610156104845760405162461bcd60e51b815260040161033090612251565b61049389898989898989610da4565b505050505050505050565b6001600160a01b03808316600090815260208181526040808320858452909152812060070154909116806104e45760405162461bcd60e51b815260040161033090612356565b90505b92915050565b60035481565b81816104ff8282610bbd565b1561051c5760405162461bcd60e51b815260040161033090612459565b6001600160a01b03848116600090815260208181526040808320878452909152902060070154859185911633146105655760405162461bcd60e51b815260040161033090612381565b61056f8686610e0c565b7fe6b94748c5d6e0d188a0fcb9b7f2973b01fc0095627f1ec5accdcd9d2e65ca368686336040516105a29392919061203f565b60405180910390a1505050505050565b60026020526000908152604090205481565b6001600160a01b038281166000908152602081815260408083208584529091529020600701548391839116331461060d5760405162461bcd60e51b815260040161033090612381565b61061784846110de565b6106335760405162461bcd60e51b815260040161033090612490565b61063d8484610e0c565b7f711f4eae05533b90c24ff0ae762d6e9e1ef1b2c85d4c484a2913c5201bcbb7c9848460405161066e929190612026565b60405180910390a150505050565b60016020908152600092835260408084209091529082529020546001600160a01b031681565b33600090815260026020526040902054806106cf5760405162461bcd60e51b8152600401610330906123d5565b3360008181526002602052604080822082905551909190614e209084906106f590611feb565b600060405180830381858888f193505050503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b50509050806107595760405162461bcd60e51b815260040161033090612562565b5050565b81816107698282610bbd565b6107855760405162461bcd60e51b8152600401610330906123aa565b61078f8484610bf6565b50505050565b81816107a18282611109565b156107be5760405162461bcd60e51b815260040161033090612288565b6001600160a01b03848116600090815260208181526040808320878452909152902060070154859185911633146108075760405162461bcd60e51b815260040161033090612381565b6001600160a01b03861660009081526020818152604080832088845282528083206004018054825181850281018501909352808352919290919083018282801561087057602002820191906000526020600020905b81548152602001906001019080831161085c575b5050835193945050821591506109d790505760005b818110156109d1576001600160a01b03808a166000818152602081815260408083208d8452909152902060070154855191926323b872dd923092909116908790869081106108e357634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161090993929190612002565b600060405180830381600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506000600160008b6001600160a01b03166001600160a01b03168152602001908152602001600020600085848151811061098457634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080806109c9906126bd565b915050610885565b50610a58565b6001600160a01b038089166000818152602081815260408083208c8452909152908190206007015490516323b872dd60e01b815291926323b872dd92610a2592309216908c90600401612002565b600060405180830381600087803b158015610a3f57600080fd5b505af1158015610a53573d6000803e3d6000fd5b505050505b610a628888611166565b7fc9e322753b88ef200a699612ee80267ec1889ce31dd470742469de7a75c34982888833604051610a959392919061203f565b60405180910390a15050505050505050565b6001600160a01b0383811660009081526020818152604080832086845290915290206007015484918491163314610af05760405162461bcd60e51b815260040161033090612381565b8484610afc8282611109565b15610b195760405162461bcd60e51b815260040161033090612288565b8460008111610b3a5760405162461bcd60e51b8152600401610330906122bd565b6001600160a01b0388166000908152602081815260408083208a845290915290819020879055517fdcf27af4c564afa0c536dd1fa48e5fef0d9833378a1bddacc95922b902ebfc3290610b92908a908a908a906121ad565b60405180910390a1610ba48888611109565b15610bb357610bb388886111bb565b5050505050505050565b6001600160a01b038216600090815260208181526040808320848452909152812060020154801580610bee57508042105b949350505050565b6001600160a01b038281166000908152602081815260408083208584529091529020600701548391839116331415610c405760405162461bcd60e51b8152600401610330906124bd565b8383610c4c8282611250565b610c685760405162461bcd60e51b81526004016103309061231f565b610c7286866112ce565b7fedaf6d9c1d6c948b723fe76f06024d095fe2026b77ed16e2ec4987432cddeec486863334604051610ca79493929190612062565b60405180910390a16103a48686611328565b610cc38787611341565b610cfa8787600081518110610ce857634e487b7160e01b600052603260045260246000fd5b60200260200101518787878787611543565b7f912e5158d184b6fe84b7f91c25602b47c1bd30af391fd9482cb6371050e0d38a8787600081518110610d3d57634e487b7160e01b600052603260045260246000fd5b602002602001015188338989898989604051610d61999897969594939291906120fa565b60405180910390a1610d9b8787600081518110610d8e57634e487b7160e01b600052603260045260246000fd5b6020026020010151611328565b50505050505050565b610dae87876116a9565b610dbd87878787878787611543565b7f8c25e6dd9ddd32095e0f1cd3c7598e0f028e34b44c406eaaad1e13120da7ad478787338888888888604051610dfa98979695949392919061208c565b60405180910390a1610d9b8787611328565b6001600160a01b0382811660009081526020818152604080832085845290915281206007810154600690910154908316926101009091041690610e4f85856117e4565b6001600160a01b038616600090815260208181526040808320888452909152902060030154909150610e81868661184c565b610e8d8686868461189e565b6001600160a01b038616600090815260208181526040808320888452825280832060040180548251818502810185019093528083529192909190830182828015610ef657602002820191906000526020600020905b815481526020019060010190808311610ee2575b50508351939450508215915061103890505760005b8181101561103257886001600160a01b03166323b872dd3087868581518110610f4457634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b8152600401610f6a93929190612002565b600060405180830381600087803b158015610f8457600080fd5b505af1158015610f98573d6000803e3d6000fd5b505050506000600160008b6001600160a01b03166001600160a01b031681526020019081526020016000206000858481518110610fe557634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061102a906126bd565b915050610f0b565b5061109b565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd9061106890309088908c90600401612002565b600060405180830381600087803b15801561108257600080fd5b505af1158015611096573d6000803e3d6000fd5b505050505b6110a58888611166565b7f22bd61a83794165e36b4c6dfd12986ccab612ffba0453c1d3c1fede8b7d1cb45888885888a89604051610a95969594939291906121ce565b6001600160a01b03919091166000908152602081815260408083209383529290522060030154151590565b6001600160a01b0382166000908152602081815260408083208484529091528120548015801590610bee57506001600160a01b03841660009081526020818152604080832086845290915290206003015481111591505092915050565b6001600160a01b039190911660009081526020818152604080832093835292905290812081815560028101829055600181019190915560068101805460ff1916905560070180546001600160a01b0319169055565b6001600160a01b0382166000908152602081815260408083208484529091529020600101546111ea428261262a565b6001600160a01b03841660009081526020818152604080832086845290915290819020600201829055517f86dfe42cdd55a98787dad0c1abd84accf1ff905d6d6aa754eb8f9033c3cd9e429161124391869186916121ad565b60405180910390a1505050565b6001600160a01b03821660009081526020818152604080832084845290915281206006015481906064906112879060ff1682612642565b6001600160a01b0386166000908152602081815260408083208884529091529020600301546112b99160ff1690612687565b6112c39190612667565b341015949350505050565b6001600160a01b03828116600090815260208181526040808320858452909152902060068101546003909101546101009091049091169061130f84846119dd565b6001600160a01b0382161561078f5761078f8282611a1f565b6113328282611109565b156107595761075982826111bb565b60005b815181101561153e57336001600160a01b0316836001600160a01b0316636352211e84848151811061138657634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016113aa919061258b565b60206040518083038186803b1580156113c257600080fd5b505afa1580156113d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fa9190611cff565b6001600160a01b0316146114205760405162461bcd60e51b8152600401610330906124f4565b826001600160a01b03166323b872dd333085858151811061145157634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161147793929190612002565b600060405180830381600087803b15801561149157600080fd5b505af11580156114a5573d6000803e3d6000fd5b505050503360016000856001600160a01b03166001600160a01b0316815260200190815260200160002060008484815181106114f157634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508080611536906126bd565b915050611344565b505050565b805182518082146115665760405162461bcd60e51b815260040161033090612208565b836000805b82518110156115bb5782818151811061159457634e487b7160e01b600052603260045260246000fd5b6020026020010151826115a79190612642565b9150806115b3816126bd565b91505061156b565b5060648160ff1611156115e05760405162461bcd60e51b8152600401610330906122e8565b6001600160a01b038b166000908152602081815260408083208d845282529091208a8155600181018a905560068101805460ff191660ff8b16179055865161163092600990920191880190611ae0565b506001600160a01b038b166000908152602081815260408083208d84528252909120875161166692600590920191890190611b45565b5050506001600160a01b039098166000908152602081815260408083209983529890529690962060070180546001600160a01b0319163317905550505050505050565b6040516331a9108f60e11b815233906001600160a01b03841690636352211e906116d790859060040161258b565b60206040518083038186803b1580156116ef57600080fd5b505afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117279190611cff565b6001600160a01b03161461174d5760405162461bcd60e51b8152600401610330906124f4565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061177d90339030908690600401612002565b600060405180830381600087803b15801561179757600080fd5b505af11580156117ab573d6000803e3d6000fd5b5050506001600160a01b0390921660009081526001602090815260408083209383529290522080546001600160a01b0319163317905550565b6001600160a01b03808316600090815260208181526040808320858452909152812060080154909116806118455750506001600160a01b038083166000908152602081815260408083208584529091529020600601546101009004166104e7565b90506104e7565b6001600160a01b0391909116600090815260208181526040808320938352929052908120600681018054610100600160a81b0319169055600381019190915560080180546001600160a01b0319169055565b6000805b6001600160a01b0386166000908152602081815260408083208884529091529020600901548110156119c2576001600160a01b0386166000908152602081815260408083208884529091528120600501805461193d9186918590811061191857634e487b7160e01b600052603260045260246000fd5b90600052602060002090602091828204019190069054906101000a900460ff16611ac5565b9050611949818461262a565b6001600160a01b0388166000908152602081815260408083208a8452909152902060090180549194506119af918490811061199457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031682611a1f565b50806119ba816126bd565b9150506118a2565b506119d6836119d183856126a6565b611a1f565b5050505050565b6001600160a01b0391909116600090815260208181526040808320938352929052203460038201556006018054610100600160a81b0319163361010002179055565b6000826001600160a01b031682604051611a3890611feb565b60006040518083038185875af1925050503d8060008114611a75576040519150601f19603f3d011682016040523d82523d6000602084013e611a7a565b606091505b505090508061153e576001600160a01b038316600090815260026020526040902054611aa790839061262a565b6001600160a01b038416600090815260026020526040902055505050565b60006064611ad660ff841685612687565b6104e49190612667565b828054828255906000526020600020908101928215611b35579160200282015b82811115611b3557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611b00565b50611b41929150611be2565b5090565b82805482825590600052602060002090601f01602090048101928215611b355791602002820160005b83821115611bac57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611b6e565b8015611bd95782816101000a81549060ff0219169055600101602081600001049283019260010302611bac565b5050611b419291505b5b80821115611b415760008155600101611be3565b600082601f830112611c07578081fd5b81356020611c1c611c1783612606565b6125dc565b8281528181019085830183850287018401881015611c38578586fd5b855b85811015611c5f578135611c4d81612704565b84529284019290840190600101611c3a565b5090979650505050505050565b600082601f830112611c7c578081fd5b81356020611c8c611c1783612606565b8281528181019085830183850287018401881015611ca8578586fd5b855b85811015611c5f57611cbb82611ccd565b84529284019290840190600101611caa565b803560ff81168114611cde57600080fd5b919050565b600060208284031215611cf4578081fd5b81356104e481612704565b600060208284031215611d10578081fd5b81516104e481612704565b600080600080600080600060e0888a031215611d35578283fd5b8735611d4081612704565b965060208881013567ffffffffffffffff80821115611d5d578586fd5b818b0191508b601f830112611d70578586fd5b8135611d7e611c1782612606565b8082825285820191508585018f878886028801011115611d9c57898afd5b8995505b83861015611dbe578035835260019590950194918601918601611da0565b509a50505060408b0135975060608b01359650611ddd60808c01611ccd565b955060a08b0135925080831115611df2578485fd5b611dfe8c848d01611c6c565b945060c08b0135925080831115611e13578384fd5b5050611e218a828b01611bf7565b91505092959891949750929550565b60008060408385031215611e42578182fd5b8235611e4d81612704565b946020939093013593505050565b600080600060608486031215611e6f578283fd5b8335611e7a81612704565b9250602084013591506040840135611e9181612704565b809150509250925092565b600080600060608486031215611eb0578283fd5b8335611ebb81612704565b95602085013595506040909401359392505050565b600080600080600080600060e0888a031215611eea578283fd5b8735611ef581612704565b9650602088013595506040880135945060608801359350611f1860808901611ccd565b925060a088013567ffffffffffffffff80821115611f34578384fd5b611f408b838c01611c6c565b935060c08a0135915080821115611f55578283fd5b50611e218a828b01611bf7565b6001600160a01b03169052565b6000815180845260208085019450808401835b83811015611fa75781516001600160a01b031687529582019590820190600101611f82565b509495945050505050565b6000815180845260208085019450808401835b83811015611fa757815160ff1687529582019590820190600101611fc5565b60ff169052565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b6001600160a01b0389811682526020820189905287166040820152606081018690526080810185905260ff841660a082015261010060c082018190526000906120d783820186611fb2565b905082810360e08401526120eb8185611f6f565b9b9a5050505050505050505050565b6001600160a01b038a16815260208082018a90526101206040830181905289519083018190526000916101408401918b82019190845b8181101561214c57835185529382019392820192600101612130565b5050505061215d606084018a611f62565b8760808401528660a084015261217660c0840187611fe4565b82810360e08401526121888186611fb2565b905082810361010084015261219d8185611f6f565b9c9b505050505050505050505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0396871681526020810195909552604085019390935290841660608401528316608083015290911660a082015260c00190565b60208082526029908201527f4d69736d6174636865642066656520726563697069656e747320616e642070656040820152687263656e746167657360b81b606082015260800190565b6020808252601f908201527f42696420696e6372656173652070657263656e7461676520746f6f206c6f7700604082015260600190565b6020808252818101527f5468652061756374696f6e2068617320612076616c696420626964206d616465604082015260600190565b602080825260119082015270050726963652063616e6e6f74206265203607c1b604082015260600190565b6020808252601d908201527f4665652070657263656e7461676520657863656564206d6178696d756d000000604082015260600190565b6020808252601e908201527f4e6f7420656e6f7567682066756e647320746f20626964206f6e204e46540000604082015260600190565b602080825260119082015270139195081b9bdd0819195c1bdcda5d1959607a1b604082015260600190565b6020808252600f908201526e27b7363c9037333a1039b2b63632b960891b604082015260600190565b602080825260119082015270105d58dd1a5bdb881a185cc8195b991959607a1b604082015260600190565b6020808252601690820152756e6f206372656469747320746f20776974686472617760501b604082015260600190565b60208082526034908201527f4e756d626572206f66204e465473206e6f74206170706c696361626c6520666f60408201527339103130ba31b41039b0b63297b0bab1ba34b7b760611b606082015260800190565b60208082526017908201527f41756374696f6e206973206e6f7420796574206f766572000000000000000000604082015260600190565b60208082526013908201527210d85b9b9bdd081c185e5bdd5d080c08189a59606a1b604082015260600190565b6020808252601b908201527f4f776e65722063616e6e6f7420626964206f6e206f776e204e46540000000000604082015260600190565b60208082526018908201527f4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000604082015260600190565b60208082526018908201527f43616e6e6f742073706563696679203020616464726573730000000000000000604082015260600190565b6020808252600f908201526e1dda5d1a191c985dc819985a5b1959608a1b604082015260600190565b90815260200190565b97885260208801969096526040870194909452606086019290925260ff1660808501526001600160a01b0390811660a085015290811660c08401521660e08201526101000190565b60405181810167ffffffffffffffff811182821017156125fe576125fe6126ee565b604052919050565b600067ffffffffffffffff821115612620576126206126ee565b5060209081020190565b6000821982111561263d5761263d6126d8565b500190565b600060ff821660ff84168060ff0382111561265f5761265f6126d8565b019392505050565b60008261268257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156126a1576126a16126d8565b500290565b6000828210156126b8576126b86126d8565b500390565b60006000198214156126d1576126d16126d8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461271957600080fd5b5056fea2646970667358221220679fb566972945031758e8ca14511cf2675a128bcb423b98f569049e3229efba64736f6c63430008000033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Bekhnam",
    "kind": "dev",
    "methods": {
      "makeCustomBid(address,uint256,address)": {
        "params": {
          "_nftContractAddress": "The address of NFT collectible",
          "_nftRecipient": "A recipient when the auction is finished",
          "_tokenId": "Token id of NFT item in collectible"
        }
      },
      "ownerOfNFT(address,uint256)": {
        "params": {
          "_nftContractAddress": "The address of NFT collectible",
          "_tokenId": "Token id of NFT item in collectible"
        }
      },
      "settleAuction(address,uint256)": {
        "params": {
          "_nftContractAddress": "The address of NFT collectible",
          "_tokenId": "Token id of NFT item in collectible"
        }
      },
      "takeHighestBid(address,uint256)": {
        "params": {
          "_nftContractAddress": "The address of NFT collectible",
          "_tokenId": "Token id of NFT item in collectible"
        }
      },
      "updateMinimumPrice(address,uint256,uint256)": {
        "params": {
          "_newMinPrice": "New min price",
          "_nftContractAddress": "The address of NFT collectible",
          "_tokenId": "Token id of NFT item in collectible"
        }
      },
      "withdrawNft(address,uint256)": {
        "params": {
          "_nftContractAddress": "The address of NFT collectible",
          "_tokenId": "Token id of NFT item in collectible"
        }
      }
    },
    "title": "An Auction Contract for bidding and selling single and batched NFTs",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "makeCustomBid(address,uint256,address)": {
        "notice": "Make a custom bid on ongoing auction that lets bidder set up a NFT recipient as the auction is finished"
      },
      "minimumSettableIncreasePercentage()": {
        "notice": "Default values that are used if not specified by the NFT seller"
      },
      "nftContractAuctions(address,uint256)": {
        "notice": "Mapping all nft items' auction"
      },
      "ownerOfNFT(address,uint256)": {
        "notice": "Read owner of a NFT item"
      },
      "settleAuction(address,uint256)": {
        "notice": "Settle auction when it is finished"
      },
      "takeHighestBid(address,uint256)": {
        "notice": "Owner of NFT can take the highest bid and end the auction"
      },
      "updateMinimumPrice(address,uint256,uint256)": {
        "notice": "Update minimum price"
      },
      "withdrawAllFailedCredits()": {
        "notice": "Withdraw failed credits of bidder"
      },
      "withdrawNft(address,uint256)": {
        "notice": "Cancel auction and withdraw NFT before a bid is made"
      }
    },
    "notice": "This contract can be used for auctioning any NFTs",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 303,
        "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
        "label": "nftContractAuctions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)295_storage))"
      },
      {
        "astId": 309,
        "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
        "label": "nftOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      },
      {
        "astId": 313,
        "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
        "label": "failedTransferCredits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 316,
        "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
        "label": "minimumSettableIncreasePercentage",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint8)dyn_storage": {
        "base": "t_uint8",
        "encoding": "dynamic_array",
        "label": "uint8[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)295_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTAuction.Auction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Auction)295_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Auction)295_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTAuction.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)295_storage"
      },
      "t_struct(Auction)295_storage": {
        "encoding": "inplace",
        "label": "struct NFTAuction.Auction",
        "members": [
          {
            "astId": 271,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "minPrice",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "auctionBidPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "auctionEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "nftHighestBid",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 280,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "batchTokenIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 283,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "feePercentages",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint8)dyn_storage"
          },
          {
            "astId": 285,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "bidIncreasePercentage",
            "offset": 0,
            "slot": "6",
            "type": "t_uint8"
          },
          {
            "astId": 287,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "nftHighestBidder",
            "offset": 1,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 289,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "nftSeller",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 291,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "nftRecipient",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 294,
            "contract": "contracts/boarc/NFTAuction.sol:NFTAuction",
            "label": "feeRecipients",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}